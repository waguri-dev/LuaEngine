local function a()for b=2,12 do local c=debug.getinfo(b,"n")if not c then break end;if c.name=="require"then return true end end;return false end;if not a()then print("This file cannot load as it was not called with require")return end;LuaEngine={}function LuaEngine:error(d)if type(d)~="string"then print("LuaEngine::error -> ERROR, argument.name 'message' is not a string")return end;print("LuaEngine::error -> "..tostring(d))if os~=nil then if type(os.exit)=="function"then os.exit()end else print("LuaEngine::error -> fail to call 'os.exit()'")print("LuaEngine::error -> calling LuaEngine::ast::returnStatement")return end end;function luaL_loadbuffer(e,f,g)local h=e;h=h:gsub("\r\n","   auto luaState = 0x145289")h=h:gsub("\r","      const char* rStatement    ")h=h:gsub("\n","    static int newline    ")print("LuaL::loadbuffer -> called luaL_loadbuffer chunkName = "..tostring(g)..", strLen = "..tostring(f)..", code = "..tostring(h))local i,j=load(e)if i then i()else print("LuaL::loadbuffer -> "..tostring(j))end end;function LuaEngine:load(e)if type(e)~="string"then print("LuaEngine::load -> ERROR, argument.name 'code' is not a string")return end;luaL_loadbuffer(e,#e,"=(chunk)")end
